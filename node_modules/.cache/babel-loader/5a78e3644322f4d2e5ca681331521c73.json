{"ast":null,"code":"var _jsxFileName = \"/Users/dugertulga/Downloads/burger project/src/pages/BurgerPage/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Burger from \"../../components/Burger\";\nimport BuildControls from \"../../components/BuildControls\";\nimport Modal from \"../../components/General/Modal\";\nimport OrderSummary from \"../../components/OrderSummary\";\nimport axios from \"../../axios-orders\";\nimport Spinner from \"../../components/General/Spinner\";\nconst INGREDIENT_PRICES = {\n  salad: 150,\n  cheese: 250,\n  bacon: 800,\n  meat: 1500\n};\nconst INGREDIENT_NAMES = {\n  bacon: \"Гахайн мах\",\n  cheese: \"Бяслаг\",\n  meat: \"Үхрийн мах\",\n  salad: \"Салад\"\n};\n\nclass BurgerPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        cheese: 0,\n        bacon: 0,\n        meat: 0\n      },\n      totalPrice: 1000,\n      purchasing: false,\n      confirmOrder: false\n    };\n\n    this.componentDidMount = () => {};\n\n    this.continueOrder = () => {\n      const params = [];\n\n      for (let orts in this.state.ingredients) {\n        params.push(orts + \"=\" + this.state.ingredients[orts]);\n      }\n\n      params.push(\"dun=\" + this.state.totalPrice);\n      this.props.history.push({\n        pathname: \"/ship\",\n        search: params.join(\"&\")\n      });\n      this.closeConfirmModal();\n    };\n\n    this.showConfirmModal = () => {\n      this.setState({\n        confirmOrder: true\n      });\n    };\n\n    this.closeConfirmModal = () => {\n      this.setState({\n        confirmOrder: false\n      });\n    };\n\n    this.ortsNemeh = type => {\n      const newIngredients = { ...this.state.ingredients\n      };\n      newIngredients[type]++;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        purchasing: true,\n        totalPrice: newPrice,\n        ingredients: newIngredients\n      });\n    };\n\n    this.ortsHasah = type => {\n      if (this.state.ingredients[type] > 0) {\n        const newIngredients = { ...this.state.ingredients\n        };\n        newIngredients[type]--;\n        const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n        this.setState({\n          purchasing: newPrice > 1000,\n          totalPrice: newPrice,\n          ingredients: newIngredients\n        });\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const disabledIngredients = { ...this.state.ingredients\n    };\n\n    for (let key in disabledIngredients) {\n      disabledIngredients[key] = disabledIngredients[key] <= 0;\n    }\n\n    console.log(\"hey\", this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      closeConfirmModal: this.closeConfirmModal,\n      show: this.state.confirmOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : React.createElement(OrderSummary, {\n      onCancel: this.closeConfirmModal,\n      onContinue: this.continueOrder,\n      price: this.state.totalPrice,\n      ingredientsNames: INGREDIENT_NAMES,\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      choose: this.props.choose,\n      orts: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      showConfirmModal: this.showConfirmModal,\n      ingredientsNames: INGREDIENT_NAMES,\n      disabled: !this.state.purchasing,\n      price: this.state.totalPrice,\n      disabledIngredients: disabledIngredients,\n      ortsHasah: this.ortsHasah,\n      ortsNemeh: this.ortsNemeh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst a = state => {\n  return {\n    burgeriinOrts: state.ingredients,\n    niitUne: state.totalPrice\n  };\n};\n\nconst b = dispatch => {\n  return {\n    ortsNem: ortsNer => dispatch({\n      type: \"ADD_INGREDIENT\"\n    }),\n    ortsHas: ortsNer => dispatch({\n      type: \"REMOVE_INGREDIENT\"\n    })\n  };\n};\n\nexport default connect(a, b)(BurgerPage);","map":{"version":3,"sources":["/Users/dugertulga/Downloads/burger project/src/pages/BurgerPage/index.js"],"names":["React","Component","connect","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","bacon","meat","INGREDIENT_NAMES","BurgerPage","state","ingredients","totalPrice","purchasing","confirmOrder","componentDidMount","continueOrder","params","orts","push","props","history","pathname","search","join","closeConfirmModal","showConfirmModal","setState","ortsNemeh","type","newIngredients","newPrice","ortsHasah","render","console","log","disabledIngredients","key","loading","choose","a","burgeriinOrts","niitUne","b","dispatch","ortsNem","ortsNer","ortsHas"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Burger from \"../../components/Burger\";\r\nimport BuildControls from \"../../components/BuildControls\";\r\nimport Modal from \"../../components/General/Modal\";\r\nimport OrderSummary from \"../../components/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/General/Spinner\";\r\n\r\nconst INGREDIENT_PRICES = { salad: 150, cheese: 250, bacon: 800, meat: 1500 };\r\nconst INGREDIENT_NAMES = {\r\n  bacon: \"Гахайн мах\",\r\n  cheese: \"Бяслаг\",\r\n  meat: \"Үхрийн мах\",\r\n  salad: \"Салад\"\r\n};\r\n\r\nclass BurgerPage extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      cheese: 0,\r\n      bacon: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 1000,\r\n    purchasing: false,\r\n    confirmOrder: false\r\n  };\r\n\r\n  componentDidMount = () => {};\r\n\r\n  continueOrder = () => {\r\n    const params = [];\r\n\r\n    for (let orts in this.state.ingredients) {\r\n      params.push(orts + \"=\" + this.state.ingredients[orts]);\r\n    }\r\n\r\n    params.push(\"dun=\" + this.state.totalPrice);\r\n\r\n    this.props.history.push({\r\n      pathname: \"/ship\",\r\n      search: params.join(\"&\")\r\n    });\r\n\r\n    this.closeConfirmModal();\r\n  };\r\n\r\n  showConfirmModal = () => {\r\n    this.setState({ confirmOrder: true });\r\n  };\r\n\r\n  closeConfirmModal = () => {\r\n    this.setState({ confirmOrder: false });\r\n  };\r\n\r\n  ortsNemeh = type => {\r\n    const newIngredients = { ...this.state.ingredients };\r\n    newIngredients[type]++;\r\n    const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\r\n    this.setState({\r\n      purchasing: true,\r\n      totalPrice: newPrice,\r\n      ingredients: newIngredients\r\n    });\r\n  };\r\n\r\n  ortsHasah = type => {\r\n    if (this.state.ingredients[type] > 0) {\r\n      const newIngredients = { ...this.state.ingredients };\r\n      newIngredients[type]--;\r\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\r\n      this.setState({\r\n        purchasing: newPrice > 1000,\r\n        totalPrice: newPrice,\r\n        ingredients: newIngredients\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const disabledIngredients = { ...this.state.ingredients };\r\n\r\n    for (let key in disabledIngredients) {\r\n      disabledIngredients[key] = disabledIngredients[key] <= 0;\r\n    }\r\n\r\n    console.log(\"hey\", this.props);\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          closeConfirmModal={this.closeConfirmModal}\r\n          show={this.state.confirmOrder}\r\n        >\r\n          {this.state.loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <OrderSummary\r\n              onCancel={this.closeConfirmModal}\r\n              onContinue={this.continueOrder}\r\n              price={this.state.totalPrice}\r\n              ingredientsNames={INGREDIENT_NAMES}\r\n              ingredients={this.state.ingredients}\r\n            />\r\n          )}\r\n        </Modal>\r\n\r\n        <Burger choose={this.props.choose} orts={this.state.ingredients} />\r\n        <BuildControls\r\n          showConfirmModal={this.showConfirmModal}\r\n          ingredientsNames={INGREDIENT_NAMES}\r\n          disabled={!this.state.purchasing}\r\n          price={this.state.totalPrice}\r\n          disabledIngredients={disabledIngredients}\r\n          ortsHasah={this.ortsHasah}\r\n          ortsNemeh={this.ortsNemeh}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst a = state => {\r\n  return {\r\n    burgeriinOrts: state.ingredients,\r\n    niitUne: state.totalPrice\r\n  };\r\n};\r\n\r\nconst b = dispatch => {\r\n  return {\r\n    ortsNem: ortsNer => dispatch({ type: \"ADD_INGREDIENT\" }),\r\n    ortsHas: ortsNer => dispatch({ type: \"REMOVE_INGREDIENT\" })\r\n  };\r\n};\r\n\r\nexport default connect(a, b)(BurgerPage);\r\n"]},"metadata":{},"sourceType":"module"}