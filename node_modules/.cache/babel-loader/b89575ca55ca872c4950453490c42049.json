{"ast":null,"code":"var _jsxFileName = \"/Users/dugertulga/Downloads/burger project/src/components/Burger/index.js\";\nimport React from \"react\";\nimport BurgerIngredient from \"../BurgerIngredient\";\nimport css from \"./style.module.css\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Burger = props => {\n  //{bacon: 2, cheese: 2, meat: 1, salad: 1}\n  console.log(props.orts);\n  const items = Object.entries(props.orts); // {bacon: 2, cheese: 2, meat: 1, salad: 1} -ийг нэг нэгээр нь массив болгож хувиргахын тулд \"Object.entries\" функцыг ашиглана. Тухайн функц руу object-ийг дамжуулхад, тухайн object-ийн аттрибютуудыг нэг массив болгоод гаргаж ирнэ.\n\n  console.log(items);\n  let content = [];\n  items.map(el => {\n    for (let i = 0; i < el[1]; i++) content.push(React.createElement(BurgerIngredient, {\n      key: `${el[0]}${i + 1}`,\n      type: el[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  });\n  /*items.map -ийн el болгоноор нь давталт хийгээд тэр болгоноор нь BurgerIngredient гэдэг компонентүүдийг үүсгээд массивт хийнэ, тэгээд тэр массиваа  return (\r\n    <div className={css.Burger}>\r\n    <BurgerIngredient type=\"bread-top\" />-ийн\r\n    {content}-д гаргаж ирнэ.\r\n  */\n\n  if (content.length === 0) content = React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\\u0425\\u0430\\u0447\\u0438\\u0440\\u0442\\u0430\\u0439 \\u0442\\u0430\\u043B\\u0445\\u043D\\u044B\\u0445\\u0430\\u0430 \\u043E\\u0440\\u0446\\u044B\\u0433 \\u0441\\u043E\\u043D\\u0433\\u043E\\u043D\\u043E \\u0443\\u0443...\");\n  return React.createElement(\"div\", {\n    className: css.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), content, React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default Burger;","map":{"version":3,"sources":["/Users/dugertulga/Downloads/burger project/src/components/Burger/index.js"],"names":["React","BurgerIngredient","css","withRouter","Burger","props","console","log","orts","items","Object","entries","content","map","el","i","push","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeN,KAAK,CAACG,IAArB,CAAd,CAHwB,CAIxB;;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEA,MAAIG,OAAO,GAAG,EAAd;AACAH,EAAAA,KAAK,CAACI,GAAN,CAAWC,EAAD,IAAQ;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,EAAE,CAAC,CAAD,CAAtB,EAA2BC,CAAC,EAA5B,EACEH,OAAO,CAACI,IAAR,CAAa,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAG,GAAEF,EAAE,CAAC,CAAD,CAAI,GAAEC,CAAC,GAAG,CAAE,EAAxC;AAA2C,MAAA,IAAI,EAAED,EAAE,CAAC,CAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACH,GAHD;AAIA;;;;;;AAKA,MAAIF,OAAO,CAACK,MAAR,KAAmB,CAAvB,EACEL,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAAV;AAEF,SACE;AAAK,IAAA,SAAS,EAAEV,GAAG,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGQ,OAFH,EAGE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA3BD;;AA6BA,eAAeR,MAAf","sourcesContent":["import React from \"react\";\r\nimport BurgerIngredient from \"../BurgerIngredient\";\r\nimport css from \"./style.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Burger = (props) => {\r\n  //{bacon: 2, cheese: 2, meat: 1, salad: 1}\r\n  console.log(props.orts);\r\n  const items = Object.entries(props.orts);\r\n  // {bacon: 2, cheese: 2, meat: 1, salad: 1} -ийг нэг нэгээр нь массив болгож хувиргахын тулд \"Object.entries\" функцыг ашиглана. Тухайн функц руу object-ийг дамжуулхад, тухайн object-ийн аттрибютуудыг нэг массив болгоод гаргаж ирнэ.\r\n  console.log(items);\r\n\r\n  let content = [];\r\n  items.map((el) => {\r\n    for (let i = 0; i < el[1]; i++)\r\n      content.push(<BurgerIngredient key={`${el[0]}${i + 1}`} type={el[0]} />);\r\n  });\r\n  /*items.map -ийн el болгоноор нь давталт хийгээд тэр болгоноор нь BurgerIngredient гэдэг компонентүүдийг үүсгээд массивт хийнэ, тэгээд тэр массиваа  return (\r\n    <div className={css.Burger}>\r\n    <BurgerIngredient type=\"bread-top\" />-ийн\r\n    {content}-д гаргаж ирнэ.\r\n*/\r\n  if (content.length === 0)\r\n    content = <p>Хачиртай талхныхаа орцыг сонгоно уу...</p>;\r\n\r\n  return (\r\n    <div className={css.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {content}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n"]},"metadata":{},"sourceType":"module"}